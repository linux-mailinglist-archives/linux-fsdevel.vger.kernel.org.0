Return-Path: <linux-fsdevel-owner@vger.kernel.org>
X-Original-To: lists+linux-fsdevel@lfdr.de
Delivered-To: lists+linux-fsdevel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id B9BF43A8F0D
	for <lists+linux-fsdevel@lfdr.de>; Wed, 16 Jun 2021 04:53:31 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231966AbhFPCzf (ORCPT <rfc822;lists+linux-fsdevel@lfdr.de>);
        Tue, 15 Jun 2021 22:55:35 -0400
Received: from regular1.263xmail.com ([211.150.70.202]:39102 "EHLO
        regular1.263xmail.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231934AbhFPCzf (ORCPT
        <rfc822;linux-fsdevel@vger.kernel.org>);
        Tue, 15 Jun 2021 22:55:35 -0400
Received: from localhost (unknown [192.168.167.130])
        by regular1.263xmail.com (Postfix) with ESMTP id 72953779;
        Wed, 16 Jun 2021 10:53:13 +0800 (CST)
X-MAIL-GRAY: 0
X-MAIL-DELIVERY: 1
X-ADDR-CHECKED4: 1
X-SKE-CHECKED: 1
X-ABS-CHECKED: 1
X-ANTISPAM-LEVEL: 2
Received: from manjaro.uniontech.com (unknown [58.246.122.242])
        by smtp.263.net (postfix) whith ESMTP id P21505T140610921035520S1623811992968477_;
        Wed, 16 Jun 2021 10:53:13 +0800 (CST)
X-IP-DOMAINF: 1
X-UNIQUE-TAG: <0ec8197cca473a694a43d24aa1acaa54>
X-RL-SENDER: chenli@uniontech.com
X-SENDER: chenli@uniontech.com
X-LOGIN-NAME: chenli@uniontech.com
X-FST-TO: viro@zeniv.linux.org.uk
X-RCPT-COUNT: 5
X-SENDER-IP: 58.246.122.242
X-ATTACHMENT-NUM: 0
X-System-Flag: 0
Date:   Wed, 16 Jun 2021 10:53:12 +0800
Message-ID: <874kdyh65j.wl-chenli@uniontech.com>
From:   Chen Li <chenli@uniontech.com>
To:     Alexander Viro <viro@zeniv.linux.org.uk>,
        linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org,
        Christian Brauner <christian.brauner@ubuntu.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        linux-kernel@vger.kernel.org
Subject: [PATCH] ramfs: skip mknod if inode already exists.
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?ISO-8859-4?Q?Goj=F2?=) APEL-LB/10.8 EasyPG/1.0.0
 Emacs/27.2 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-fsdevel.vger.kernel.org>
X-Mailing-List: linux-fsdevel@vger.kernel.org


It's possible we try to mknod a dentry, which have
already bound to an inode, just skip it.

Signed-off-by: Chen Li <chenli@uniontech.com>
---
 fs/ramfs/inode.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/fs/ramfs/inode.c b/fs/ramfs/inode.c
index 9ebd17d7befb..6cb1de521142 100644
--- a/fs/ramfs/inode.c
+++ b/fs/ramfs/inode.c
@@ -106,6 +106,8 @@ ramfs_mknod(struct user_namespace *mnt_userns, struct inode *dir,
 {
 	struct inode * inode = ramfs_get_inode(dir->i_sb, dir, mode, dev);
 	int error = -ENOSPC;
+	if (dentry->d_inode)
+		return -EEXIST;
 
 	if (inode) {
 		d_instantiate(dentry, inode);
-- 
2.32.0



