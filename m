Return-Path: <linux-fsdevel-owner@vger.kernel.org>
X-Original-To: lists+linux-fsdevel@lfdr.de
Delivered-To: lists+linux-fsdevel@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 765582FA277
	for <lists+linux-fsdevel@lfdr.de>; Mon, 18 Jan 2021 15:05:24 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2392608AbhAROEK (ORCPT <rfc822;lists+linux-fsdevel@lfdr.de>);
        Mon, 18 Jan 2021 09:04:10 -0500
Received: from mx2.suse.de ([195.135.220.15]:57304 "EHLO mx2.suse.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S2392593AbhARODk (ORCPT <rfc822;linux-fsdevel@vger.kernel.org>);
        Mon, 18 Jan 2021 09:03:40 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (unknown [195.135.221.27])
        by mx2.suse.de (Postfix) with ESMTP id 88569AD24;
        Mon, 18 Jan 2021 14:02:55 +0000 (UTC)
Subject: Re: [PATCH v4] proc_sysctl: fix oops caused by incorrect command
 parameters.
To:     Xiaoming Ni <nixiaoming@huawei.com>, linux-kernel@vger.kernel.org,
        mcgrof@kernel.org, keescook@chromium.org, yzaikin@google.com,
        adobriyan@gmail.com, akpm@linux-foundation.org, mhocko@suse.com,
        mhiramat@kernel.org, linux-fsdevel@vger.kernel.org,
        stable@kernel.org, hkallweit1@gmail.com, rdunlap@infradead.org
Cc:     wangle6@huawei.com
References: <20210118133029.28580-1-nixiaoming@huawei.com>
From:   Vlastimil Babka <vbabka@suse.cz>
Message-ID: <00048ea4-6646-7297-aa77-fe9b8299f3a5@suse.cz>
Date:   Mon, 18 Jan 2021 15:02:55 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101
 Thunderbird/78.6.0
MIME-Version: 1.0
In-Reply-To: <20210118133029.28580-1-nixiaoming@huawei.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-fsdevel.vger.kernel.org>
X-Mailing-List: linux-fsdevel@vger.kernel.org

On 1/18/21 2:30 PM, Xiaoming Ni wrote:
> The process_sysctl_arg() does not check whether val is empty before
>  invoking strlen(val). If the command line parameter () is incorrectly
>  configured and val is empty, oops is triggered.
> 
> For example:
>   "hung_task_panic=1" is incorrectly written as "hung_task_panic", oops is
>   triggered. The call stack is as follows:
>     Kernel command line: .... hung_task_panic
>     ......
>     Call trace:
>     __pi_strlen+0x10/0x98
>     parse_args+0x278/0x344
>     do_sysctl_args+0x8c/0xfc
>     kernel_init+0x5c/0xf4
>     ret_from_fork+0x10/0x30
> 
> To fix it, check whether "val" is empty when "phram" is a sysctl field.
> Error codes are returned in the failure branch, and error logs are
> generated by parse_args().
> 
> Fixes: 3db978d480e2843 ("kernel/sysctl: support setting sysctl parameters
>  from kernel command line")
> Cc: stable@kernel.org # v5.8-rc1+
> Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>

Acked-by: Vlastimil Babka <vbabka@suse.cz>
Thanks!

> 
> ---------
> v4: According to Vlastimil Babka's recommendations
>   add check len == 0, and cc stable
> v3: https://lore.kernel.org/lkml/20210112033155.91502-1-nixiaoming@huawei.com/
>   Return -EINVAL, When phram is the sysctl field and val is empty.
> 
> v2: https://lore.kernel.org/lkml/20210108023339.55917-1-nixiaoming@huawei.com/
>   Added log output of the failure branch based on the review comments of Kees Cook.
> 
> v1: https://lore.kernel.org/lkml/20201224074256.117413-1-nixiaoming@huawei.com/
> 
> ---------
> ---
>  fs/proc/proc_sysctl.c | 7 ++++++-
>  1 file changed, 6 insertions(+), 1 deletion(-)
> 
> diff --git a/fs/proc/proc_sysctl.c b/fs/proc/proc_sysctl.c
> index 317899222d7f..d2018f70d1fa 100644
> --- a/fs/proc/proc_sysctl.c
> +++ b/fs/proc/proc_sysctl.c
> @@ -1770,6 +1770,12 @@ static int process_sysctl_arg(char *param, char *val,
>  			return 0;
>  	}
>  
> +	if (!val)
> +		return -EINVAL;
> +	len = strlen(val);
> +	if (len == 0)
> +		return -EINVAL;
> +
>  	/*
>  	 * To set sysctl options, we use a temporary mount of proc, look up the
>  	 * respective sys/ file and write to it. To avoid mounting it when no
> @@ -1811,7 +1817,6 @@ static int process_sysctl_arg(char *param, char *val,
>  				file, param, val);
>  		goto out;
>  	}
> -	len = strlen(val);
>  	wret = kernel_write(file, val, len, &pos);
>  	if (wret < 0) {
>  		err = wret;
> 

